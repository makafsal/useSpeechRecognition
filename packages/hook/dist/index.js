"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("react");exports.useSpeechRecognition=(t=[])=>{const r=e.useRef(null),[n,s]=e.useState(!1),[o,c]=e.useState(""),[i,u]=e.useState(""),a=`#JSGF V1.0; grammar commands; public <command> = ${t.join(" | ")};`;e.useEffect((()=>{const e=window,t=e?.SpeechRecognition||e?.webkitSpeechRecognition;if(!t)return void console.error("SpeechRecognition API is not supported in this browser.");const n=e?.SpeechGrammarList||e?.webkitSpeechGrammarList;r.current=new t;const s=new n;s.addFromString(a,1),r.current.grammars=s,r.current.continuous=!1,r.current.lang="en-US",r.current.interimResults=!1,r.current.maxAlternatives=1,r.current.onerror=e=>S(),r.current.onresult=e=>p(e)}),[]);const l=e.useCallback((()=>{r?.current.stop(),s(!1)}),[]),m=e.useCallback((()=>{n?l():(c(""),u(""),r?.current.start(),s(!0),setTimeout((()=>l()),8e3))}),[n,l]),p=e=>{const t=e.results[0][0].transcript;u(t),l()},S=e=>{c("No voice detected."),l()};return{onStart:m,onStop:l,isListening:n,errorMessage:o,result:i}};
//# sourceMappingURL=index.js.map
