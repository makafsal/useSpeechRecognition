{"version":3,"file":"index.js","sources":["../src/useSpeechRecognition.ts"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\n\ninterface SpeechRecognitionHook {\n  onStart: () => void;\n  onStop: () => void;\n  isListening: boolean;\n  errorMessage: string;\n  result: string;\n}\n\nconst BROWSER_ERR = \"SpeechRecognition API is not supported in this browser.\";\nconst DETECTION_ERR = \"No speech detected.\";\n\n/**\n * Custom hook for speech recognition.\n *\n * @param {string[]} [grammarList=[]] - List of voice commands to recognize, by default it is an `[]` array\n * @param {number} [autoStopTimeout=8000] - A timeout to stop recording automatically (milliseconds), and default timeout value is `8000` milliseconds\n * @returns {SpeechRecognitionHook} - The speech recognition hook instance.\n */\nexport const useSpeechRecognition = (\n  grammarList: string[] = [],\n  autoStopTimeout: number = 8000\n): SpeechRecognitionHook => {\n  const recognitionRef = useRef<any>(null);\n  // State\n  const [isListening, setIsListening] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  const grammar = `#JSGF V1.0; grammar commands; public <command> = ${grammarList.join(\n    \" | \"\n  )};`;\n  const onStop = useCallback(() => {\n    recognitionRef?.current.stop();\n    setIsListening(false);\n  }, []);\n\n  const onStart = useCallback(() => {\n    if (isListening) {\n      onStop();\n      return;\n    }\n\n    setErrorMessage(\"\");\n    setResult(\"\");\n\n    recognitionRef?.current.start();\n    setIsListening(true);\n\n    if (autoStopTimeout) {\n      setTimeout(() => onStop(), autoStopTimeout);\n    }\n  }, [isListening, onStop]);\n\n  const onResult = (event: any) => {\n    const command = event.results[0][0].transcript;\n    setResult(command);\n    onStop();\n  };\n\n  const onError = (event: any) => {\n    setErrorMessage(DETECTION_ERR);\n    onStop();\n  };\n\n  useEffect(() => {\n    const _window = window as any;\n    const SpeechRecognition =\n      _window?.SpeechRecognition || _window?.webkitSpeechRecognition;\n\n    const SpeechGrammarList =\n      _window?.SpeechGrammarList || _window?.webkitSpeechGrammarList;\n\n    if (!SpeechRecognition) {\n      console.error(BROWSER_ERR);\n\n      setErrorMessage(BROWSER_ERR);\n    }\n\n    if (SpeechRecognition) {\n      recognitionRef.current = new SpeechRecognition();\n\n      const speechRecognitionList = new SpeechGrammarList();\n\n      speechRecognitionList.addFromString(grammar, 1);\n\n      recognitionRef.current.grammars = speechRecognitionList;\n      recognitionRef.current.continuous = false;\n      recognitionRef.current.lang = \"en-US\";\n      recognitionRef.current.interimResults = false;\n      recognitionRef.current.maxAlternatives = 1;\n      recognitionRef.current.onerror = (event: any) => onError(event);\n      recognitionRef.current.onresult = (event: any) => onResult(event);\n    }\n  }, []);\n\n  return {\n    onStart,\n    onStop,\n    isListening,\n    errorMessage,\n    result\n  };\n};\n"],"names":["BROWSER_ERR","grammarList","autoStopTimeout","recognitionRef","useRef","isListening","setIsListening","useState","errorMessage","setErrorMessage","result","setResult","grammar","join","onStop","useCallback","current","stop","onStart","start","setTimeout","useEffect","_window","window","SpeechRecognition","webkitSpeechRecognition","SpeechGrammarList","webkitSpeechGrammarList","console","error","speechRecognitionList","addFromString","grammars","continuous","lang","interimResults","maxAlternatives","onerror","event","onresult","command","results","transcript","onResult"],"mappings":"2FAUA,MAAMA,EAAc,uFAUgB,CAClCC,EAAwB,GACxBC,EAA0B,OAE1B,MAAMC,EAAiBC,SAAY,OAE5BC,EAAaC,GAAkBC,EAAQA,UAAC,IACxCC,EAAcC,GAAmBF,EAAQA,SAAC,KAC1CG,EAAQC,GAAaJ,EAAQA,SAAC,IAE/BK,EAAU,oDAAoDX,EAAYY,KAC9E,UAEIC,EAASC,EAAAA,aAAY,KACzBZ,GAAgBa,QAAQC,OACxBX,GAAe,EAAM,GACpB,IAEGY,EAAUH,EAAAA,aAAY,KACtBV,EACFS,KAIFL,EAAgB,IAChBE,EAAU,IAEVR,GAAgBa,QAAQG,QACxBb,GAAe,GAEXJ,GACFkB,YAAW,IAAMN,KAAUZ,GAC5B,GACA,CAACG,EAAaS,IA4CjB,OA/BAO,EAAAA,WAAU,KACR,MAAMC,EAAUC,OACVC,EACJF,GAASE,mBAAqBF,GAASG,wBAEnCC,EACJJ,GAASI,mBAAqBJ,GAASK,wBAQzC,GANKH,IACHI,QAAQC,MAAM7B,GAEdS,EAAgBT,IAGdwB,EAAmB,CACrBrB,EAAea,QAAU,IAAIQ,EAE7B,MAAMM,EAAwB,IAAIJ,EAElCI,EAAsBC,cAAcnB,EAAS,GAE7CT,EAAea,QAAQgB,SAAWF,EAClC3B,EAAea,QAAQiB,YAAa,EACpC9B,EAAea,QAAQkB,KAAO,QAC9B/B,EAAea,QAAQmB,gBAAiB,EACxChC,EAAea,QAAQoB,gBAAkB,EACzCjC,EAAea,QAAQqB,QAAWC,IA9BpC7B,EAnDkB,4BAoDlBK,KA8BEX,EAAea,QAAQuB,SAAYD,GAtCtB,CAACA,IAChB,MAAME,EAAUF,EAAMG,QAAQ,GAAG,GAAGC,WACpC/B,EAAU6B,GACV1B,GAAQ,EAmC4C6B,CAASL,EAC5D,IACA,IAEI,CACLpB,UACAJ,SACAT,cACAG,eACAE,SACD"}